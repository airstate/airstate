name: Build and push server image to dockerhub

on:
    push:
        tags:
            - 'v[0-9]+.[0-9]+.[0-9]+'

env:
    REGISTRY: docker.io
    IMAGE_NAME: airstate/server

jobs:
    publish-amd64-server-image:
        runs-on: ubuntu-22.04

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Docker BuildX
              uses: docker/setup-buildx-action@v3

            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ vars.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Extract version from tag
              id: version
              run: |
                  VERSION=${GITHUB_REF_NAME#v}
                  echo "version=$VERSION" >> $GITHUB_OUTPUT

            - name: Build and push Docker image
              uses: docker/build-push-action@v6
              with:
                  context: apps/server
                  file: apps/server/Dockerfile
                  push: true
                  tags: ${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}-amd64
                  platforms: linux/amd64

    publish-arm64-server-image:
        runs-on: ubuntu-22.04-arm64

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Docker BuildX
              uses: docker/setup-buildx-action@v3

            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ vars.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Extract version from tag
              id: version
              run: |
                  VERSION=${GITHUB_REF_NAME#v}
                  echo "version=$VERSION" >> $GITHUB_OUTPUT

            - name: Build and push Docker image
              uses: docker/build-push-action@v6
              with:
                  context: apps/server
                  file: apps/server/Dockerfile
                  push: true
                  tags: ${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}-arm64
                  platforms: linux/arm64

    merge-server-image-manifests:
        needs: [publish-amd64-server-image, publish-arm64-server-image]
        runs-on: ubuntu-22.04

        steps:
            - name: Checkout repository
              uses: actions/checkout@v4

            - name: Set up Docker BuildX
              uses: docker/setup-buildx-action@v3

            - name: Log in to Docker Hub
              uses: docker/login-action@v3
              with:
                  registry: ${{ env.REGISTRY }}
                  username: ${{ vars.DOCKERHUB_USERNAME }}
                  password: ${{ secrets.DOCKERHUB_TOKEN }}

            - name: Extract version from tag
              id: version
              run: |
                  VERSION=${GITHUB_REF_NAME#v}
                  echo "version=$VERSION" >> $GITHUB_OUTPUT

            - name: Merge Docker images
              run: |
                  docker buildx imagetools create \
                    -t ${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }} \
                      ${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}-amd64 \
                      ${{ env.IMAGE_NAME }}:${{ steps.version.outputs.version }}-arm64
